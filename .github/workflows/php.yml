name: Coding Standart
on: [pull_request]
jobs:
    # Check there is no syntax errors in the project
    php-linter:
        name: PHP Syntax check 5.6|7.2|7.3|7.4|8.0|8.1
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2.0.0

            - name: PHP syntax checker 5.6
              uses: prestashop/github-action-php-lint/5.6@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 7.2
              uses: prestashop/github-action-php-lint/7.2@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 7.3
              uses: prestashop/github-action-php-lint/7.3@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 7.4
              uses: prestashop/github-action-php-lint/7.4@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 8.0
              uses: prestashop/github-action-php-lint/8.0@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

            - name: PHP syntax checker 8.1
              uses: prestashop/github-action-php-lint/8.1@master
              with:
                folder-to-exclude: "! -path \"./202/*\" ! -path \"./vendor/*\""

    # Check the PHP code follow the coding standards
    php-cs-fixer:
        name: PHP-CS-Fixer
        runs-on: ubuntu-latest
        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                    php-version: '7.4'

            - name: Checkout
              uses: actions/checkout@v2.0.0

            # Add vendor folder in cache to make next builds faster
            - name: Cache vendor folder
              uses: actions/cache@v1
              with:
                path: vendor
                key: php-${{ hashFiles('composer.lock') }}

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                path: vendor
                key: php-${{ hashFiles('composer.lock') }}

            - name: Install dependencies
              run: composer update

            - name: Run PHP-CS-Fixer
              run: ./vendor/bin/php-cs-fixer fix --dry-run --diff --using-cache=no --diff-format udiff

    # Run PHPStan against the module and a PrestaShop release
    phpstan:
        name: PHPStan
        runs-on: ubuntu-latest
        strategy:
            matrix:
                presta-versions: ['1.7.4.0', 'latest']
        steps:
            - name: Checkout
              uses: actions/checkout@v2.0.0

            # Add vendor folder in cache to make next builds faster
            - name: Cache vendor folder
              uses: actions/cache@v1
              with:
                  path: vendor
                  key: php-${{ hashFiles('composer.lock') }}

            # Add composer local folder in cache to make next builds faster
            - name: Cache composer folder
              uses: actions/cache@v1
              with:
                  path: ~/.composer/cache
                  key: php-composer-cache

            - run: composer update

            # Docker images prestashop/prestashop may be used, even if the shop remains uninstalled
            - name: Pull PrestaShop files (Tag ${{ matrix.presta-versions }})
              run: docker run -tid --rm -v ps-volume:/var/www/html --name temp-ps prestashop/prestashop:${{ matrix.presta-versions }}

            # Clear previous instance of the module in the PrestaShop volume
            - name: Clear previous module
              run: docker exec -t temp-ps rm -rf /var/www/html/modules/stripe_official

            # Run a container for PHPStan, having access to the module content and PrestaShop sources.
            # This tool is outside the composer.json because of the compatibility with PHP 5.6
            - name : Run PHPStan
              run: docker run --rm --volumes-from temp-ps -v $PWD:/var/www/html/modules/stripe_official -e _PS_ROOT_DIR_=/var/www/html --workdir=/var/www/html/modules/stripe_official phpstan/phpstan:0.12 analyse --configuration=/var/www/html/modules/stripe_official/202/phpstan/phpstan.neon
